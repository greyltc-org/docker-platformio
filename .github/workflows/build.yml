# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Trigger for parent image update
  repository_dispatch:
    types: [parent-change]


jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    env:
      MAIN_PACKAGE_NAME: platformio

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "TODAY_IS=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Generate version string
        id: versionstring
        run: echo "THIS_VERSTRING=${{ env.TODAY_IS }}.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: test

      - name: Test the container
        id: test
        run: |
          set -eo pipefail
          docker run --rm test bash -c "set -eo pipefail; pacman -Q ${{ env.MAIN_PACKAGE_NAME }} | cut -d ' ' -f2" | tee ver
          echo "::set-output name=PKG_VER::$(cat ver)"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          tags: |
            type=raw,value=${{ env.THIS_VERSTRING }}
            type=raw,value=${{ steps.test.outputs.PKG_VER }}
          flavor: |
            latest=true
          images: ghcr.io/${{ github.repository_owner }}/${{ env.MAIN_PACKAGE_NAME }}

      # Push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push to GitHub package registry
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Tag
        if: github.event_name != 'pull_request'
        run: |
          git config --global user.name 'GitHub Actions Robot'
          git config --global user.email 'github@actions.robot'
          git tag -a "v${{ env.THIS_VERSTRING }}" -m "Has ${{ env.MAIN_PACKAGE_NAME }} ${{ steps.test.outputs.PKG_VER }}"
          git push -u origin ${{ env.GITHUB_BASE_REF}} --tags

      # https://docs.github.com/en/rest/reference/releases#create-a-release
      - name: Make release
        if: github.event_name != 'pull_request'
        run: |
          curl --silent \
            --url https://api.github.com/repos/${{ github.repository }}/releases \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header "Accept: application/vnd.github.v3+json" \
            --data '{"draft":false,"tag_name":"v${{ env.THIS_VERSTRING }}","name":"${{ env.MAIN_PACKAGE_NAME }} ${{ steps.test.outputs.PKG_VER }} via ${{ env.THIS_VERSTRING }}"}' \
            --output rel_resp.json
          echo "Release Done."
          ASSET_UL_URL=$(cat rel_resp.json | jq --raw-output '.upload_url' | sed "s|{?.*||g")
